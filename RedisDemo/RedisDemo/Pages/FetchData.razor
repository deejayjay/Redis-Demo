@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using RedisDemo.Data
@using RedisDemo.Extensions

@inject WeatherForecastService ForecastService
@inject IDistributedCache Cache


<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

<button class="btn btn-primary" @onclick="LoadForecast">Load Forecast</button>

@if (_forecasts is null && _loadLocation == string.Empty)
{
    <p class="mt-4"><em>Click the button to load the forecast.</em></p>
}
else if (_forecasts is null)
{
    <p class="mt-4"><em>Loading...</em></p>
}
else
{
    <div class="h3 mt-4 @_isCachedData">@_loadLocation</div>

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in _forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? _forecasts;
    private string? _loadLocation = string.Empty;
    private string _isCachedData = "text-info";

    private async Task LoadForecast()
    {
        _forecasts = null;
        _loadLocation = null;

        var recordKey = $"WeatherForecast_{DateTime.Now:yyyyMMdd_hhmm}";

        _forecasts = await Cache.GetRecordAsync<WeatherForecast[]>(recordKey);

        if (_forecasts is null)
        {
            _forecasts = await ForecastService.GetForecastAsync(DateTime.Now);

            _loadLocation = $"Loaded from the API at {DateTime.Now:yyyyMMdd_hhmmss}";
            _isCachedData = "text-info";

            await Cache.SetRecordAsync(recordKey, _forecasts);
        }
        else
        {
            _loadLocation = $"Loaded from the cache at {DateTime.Now:yyyyMMdd_hhmmss}";
            _isCachedData = "text-danger";
        }
    }
}
